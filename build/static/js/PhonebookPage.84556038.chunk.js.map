{"version":3,"sources":["redux/contacts/contacts-selectors.js","component/AddContactsForm/AddContactsForm.styles.js","component/AddContactsForm/AddContactsForm.js","component/ChangeContactForm/ChangeContactForm.style.js","component/ChangeContactForm/ChangeContactForm.js","component/ModalWindow/ModalWindow.style.js","component/ModalWindow/ModalWindow.js","component/Filter/Filter.style.js","component/Filter/Filter.js","component/ContactsList/ContactsList.style.js","component/ContactsList/ContactsList.js","pages/PhonebookPage/PhonebookPage.style.js","pages/PhonebookPage/PhonebookPage.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getStatusLoading","loading","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","sort","a","b","Form","styled","form","StyledButton","Button","ContactsFrom","handleFormClose","someProps","console","log","useSelector","contactsSelector","dispatch","useDispatch","useState","setName","number","setNumber","onSubmit","e","preventDefault","newContact","find","contact","alert","contactsOperations","addContact","TextField","id","label","type","InputLabelProps","shrink","variant","margin","value","onChange","target","pattern","title","required","autoComplete","defaultCountry","preferredCountries","endIcon","ChangeContactsForm","choosedContact","changeContact","StyledIconButton","IconButton","StyledBox","div","ModalWindow","modalOpen","modalClose","children","Modal","open","onClose","onClick","Box","StyledOutlinedInput","OutlinedInput","Filter","placeholder","changeFilters","endAdornment","InputAdornment","position","disabled","edge","StyledList","List","ContactsList","setChangeContactModal","setChoosedContact","anchorEl","setAnchorEl","contactToDelete","setContactToDelete","filteredContacts","useEffect","fetchContacts","handleClose","map","ListItem","sx","padding","secondaryAction","currentTarget","ListItemText","primary","textAlign","paddingRight","Divider","Menu","Boolean","MenuListProps","MenuItem","Link","href","underline","color","deleteContact","Container","StyledTypography","Typography","ScrollTop","props","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","bottom","right","PhonebookPage","addContactModal","setAddContactModal","changeContactModal","statusLoading","length","AddContactsForm","ChangeContactForm","Fab","size"],"mappings":"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","file":"static/js/PhonebookPage.84556038.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getStatusLoading = (state) => state.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    const sortByName = (a, b) =>\r\n      a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;\r\n\r\n    return contacts\r\n      .filter((item) => item.name.toLowerCase().includes(normalizedFilter))\r\n      .sort(sortByName);\r\n  }\r\n);\r\n","import styled from \"@emotion/styled\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  display: flex;\r\n  margin: 10px auto 0 auto;\r\n  border-radius: 10px;\r\n  font-size: 12px;\r\n  background-color: #528ffe;\r\n  color: #fff;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n    background-color: #528ffe;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport { Form, StyledButton } from \"./AddContactsForm.styles\";\r\nimport { TextField } from \"@mui/material\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst ContactsFrom = ({ handleFormClose, someProps }) => {\r\n  console.log(\"someProps\", someProps);\r\n  const contacts = useSelector(contactsSelector.getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!number) {\r\n      alert(\"enter the phone number\");\r\n      return;\r\n    }\r\n\r\n    const newContact = { name, number };\r\n    const sameContact = contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n    if (sameContact) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(newContact));\r\n    handleFormClose();\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <TextField\r\n        id=\"name\"\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"The name can only consist of letters, apostrophe, dash and spaces.\"\r\n        required\r\n        autoComplete=\"off\"\r\n      />\r\n      <MuiPhoneNumber\r\n        id=\"phone\"\r\n        name=\"number\"\r\n        label=\"Phone number\"\r\n        type=\"tel\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        defaultCountry={\"ua\"}\r\n        preferredCountries={[\"ua\", \"ru\"]}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={number}\r\n        onChange={(e) => setNumber(e)}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        autoComplete=\"off\"\r\n      />\r\n      <StyledButton variant=\"outlined\" endIcon={<AddIcon />} type=\"submit\">\r\n        Add contact\r\n      </StyledButton>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactsFrom;\r\n","import styled from \"@emotion/styled\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  display: flex;\r\n  margin: 10px auto 0 auto;\r\n  border-radius: 10px;\r\n  font-size: 12px;\r\n  background-color: #528ffe;\r\n  color: #fff;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n    background-color: #528ffe;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport { Form, StyledButton } from \"./ChangeContactForm.style\";\r\nimport { TextField } from \"@mui/material\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\n\r\nconst ChangeContactsForm = ({ choosedContact, handleFormClose }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(choosedContact.name);\r\n  const [number, setNumber] = useState(choosedContact.number);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (number === \"+\") {\r\n      alert(\"enter the phone number\");\r\n      return;\r\n    }\r\n    const newContact = { id: choosedContact.id, name, number };\r\n    console.log(newContact);\r\n    dispatch(contactsOperations.changeContact(newContact));\r\n    handleFormClose();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only consist of letters, apostrophe, dash and spaces.\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n        <MuiPhoneNumber\r\n          id=\"phone\"\r\n          name=\"number\"\r\n          label=\"Phone number\"\r\n          type=\"tel\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          defaultCountry={\"ua\"}\r\n          preferredCountries={[\"ua\", \"ru\"]}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          value={number}\r\n          onChange={(e) => setNumber(e)}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          autoComplete=\"off\"\r\n        />\r\n        <StyledButton variant=\"outlined\" endIcon={<SaveIcon />} type=\"submit\">\r\n          Save\r\n        </StyledButton>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeContactsForm;\r\n","import styled from \"@emotion/styled\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nexport const StyledIconButton = styled(IconButton)`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const StyledBox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  min-width: 290px;\r\n  max-width: 400px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  border: 2px solid #022d5e;\r\n  border-radius: 15px;\r\n  background-color: #aacdf4;\r\n  padding: 35px 10px 10px 10px;\r\n  box-shadow: 0px 0px 15px 15px rgba(255, 255, 255, 0.2);\r\n`;\r\n","import { Modal, Box } from \"@mui/material\";\r\nimport { StyledIconButton, StyledBox } from \"./ModalWindow.style\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst ModalWindow = ({ modalOpen, modalClose, children, ...props }) => {\r\n  return (\r\n    <Modal open={modalOpen} onClose={modalClose}>\r\n      <StyledBox>\r\n        <StyledIconButton onClick={() => modalClose()}>\r\n          <CloseIcon />\r\n        </StyledIconButton>\r\n        <Box>{children}</Box>\r\n      </StyledBox>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import { OutlinedInput } from \"@mui/material\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const StyledOutlinedInput = styled(OutlinedInput)`\r\n  width: 250px;\r\n  height: 40px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\n// import s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport { contactsSelector } from \"../../redux/contacts/\";\r\nimport { changeFilters } from \"../../redux/contacts/contacts-slice\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { StyledOutlinedInput } from \"./Filter.style\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(contactsSelector.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <StyledOutlinedInput\r\n        placeholder=\"Find contact by name\"\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(changeFilters(e.target.value))}\r\n        autoComplete=\"off\"\r\n        endAdornment={\r\n          <InputAdornment position=\"end\" disabled>\r\n            <IconButton disabled edge=\"end\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { List, IconButton } from \"@mui/material\";\r\n\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const StyledList = styled(List)`\r\n  width: 97%;\r\n  max-width: 700px;\r\n  margin: 10px auto 0px auto;\r\n  padding: 0;\r\n  border: 1px solid #3d93f4;\r\n  border-radius: 5px;\r\n  //display: flex;\r\n  // justify-content: space-between;\r\n`;\r\n\r\nexport const StyledIconButton = styled(IconButton)`\r\n  position: relative;\r\n  padding: 0px;\r\n  left: 5px;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\nimport {\r\n  ListItemText,\r\n  ListItem,\r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Link,\r\n} from \"@mui/material\";\r\nimport CallIcon from \"@mui/icons-material/Call\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { StyledList, StyledIconButton } from \"./ContactsList.style\";\r\n\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst ContactsList = ({\r\n  setChangeContactModal,\r\n  setChoosedContact,\r\n  choosedContact,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [contactToDelete, setContactToDelete] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContacts = useSelector(contactsSelector.getFilteredContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <StyledList>\r\n      {filteredContacts.map((item) => {\r\n        return (\r\n          <>\r\n            <ListItem\r\n              key={item.id}\r\n              sx={{ padding: \"5px\" }}\r\n              secondaryAction={\r\n                <StyledIconButton\r\n                  key={item.id}\r\n                  edge=\"end\"\r\n                  onClick={(e) => {\r\n                    handleClick(e);\r\n                    setContactToDelete(item);\r\n                    setChoosedContact(item);\r\n                  }}\r\n                >\r\n                  <MoreVertIcon />\r\n                </StyledIconButton>\r\n              }\r\n            >\r\n              <ListItemText primary={item.name} key={item.name} />\r\n              <ListItemText\r\n                primary={item.number}\r\n                sx={{ textAlign: \"end\", paddingRight: \"20px\" }}\r\n                key={item.number}\r\n              />\r\n            </ListItem>\r\n            <Divider />\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleClose}>\r\n                <Link\r\n                  href={`tel:${choosedContact?.number}`}\r\n                  underline=\"none\"\r\n                  color=\"#489355\"\r\n                >\r\n                  <CallIcon />\r\n                  Call\r\n                </Link>\r\n                <Divider />\r\n              </MenuItem>\r\n              <MenuItem\r\n                sx={{ color: \"#CACA53\" }}\r\n                onClick={() => {\r\n                  handleClose();\r\n                  setChangeContactModal(true);\r\n                }}\r\n              >\r\n                <CreateIcon />\r\n                Change\r\n              </MenuItem>\r\n              <MenuItem\r\n                sx={{ color: \"#CA5353\" }}\r\n                onClick={() => {\r\n                  handleClose();\r\n                  console.log(\"id of deleting contact\", item.id);\r\n                  dispatch(\r\n                    contactsOperations.deleteContact(contactToDelete.id)\r\n                  );\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n                Delete\r\n              </MenuItem>\r\n            </Menu>\r\n          </>\r\n        );\r\n      })}\r\n    </StyledList>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import styled from \"@emotion/styled\";\r\nimport { Button, Typography } from \"@mui/material\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px 0;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  display: flex;\r\n  margin: 0 auto 20px auto;\r\n  border-radius: 10px;\r\n  font-size: 12px;\r\n  background-color: #528ffe;\r\n  color: #fff;\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n    background-color: #528ffe;\r\n  }\r\n`;\r\n\r\nexport const StyledTypography = styled(Typography)`\r\n  text-align: center;\r\n  margin: 20px auto;\r\n  padding: 10px;\r\n  // border: 1px solid red;\r\n  width: 250px;\r\n  // border: 2px solid #022d5e;\r\n  border-radius: 15px;\r\n  // background-color: #aacdf4;\r\n  padding: 10px 10px 10px 10px;\r\n  box-shadow: 0px 0px 15px 15px rgba(255, 255, 255, 0.2);\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport AddContactsForm from \"../../component/AddContactsForm\";\r\nimport ChangeContactForm from \"../../component/ChangeContactForm\";\r\nimport ModalWindow from \"../../component/ModalWindow/ModalWindow\";\r\nimport Filter from \"../../component/Filter\";\r\nimport ContactsList from \"../../component/ContactsList\";\r\nimport {\r\n  getContacts,\r\n  getStatusLoading,\r\n  getFilteredContacts,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\nimport {\r\n  Container,\r\n  StyledButton,\r\n  StyledTypography,\r\n} from \"./PhonebookPage.style\";\r\nimport { contactsOperations } from \"../../redux/contacts\";\r\nimport { Zoom, Box, Fab, useScrollTrigger } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <Box\r\n        onClick={handleClick}\r\n        role=\"presentation\"\r\n        sx={{ position: \"fixed\", bottom: 16, right: 16 }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nconst PhonebookPage = () => {\r\n  const [addContactModal, setAddContactModal] = useState(false);\r\n  const [changeContactModal, setChangeContactModal] = useState(false);\r\n  const [choosedContact, setChoosedContact] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const statusLoading = useSelector(getStatusLoading);\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n\r\n  const handleFormOpen = () => setAddContactModal(true);\r\n  const handleFormClose = () => {\r\n    setAddContactModal(false);\r\n    setChangeContactModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <StyledButton\r\n        variant=\"outlined\"\r\n        endIcon={<AddIcon />}\r\n        onClick={handleFormOpen}\r\n        id=\"back-to-top-anchor\"\r\n      >\r\n        Add new contact\r\n      </StyledButton>\r\n      {statusLoading && <p>Loading phonebook...</p>}\r\n      {contacts.length > 1 && <Filter />}\r\n      {filteredContacts.length > 0 ? (\r\n        <ContactsList\r\n          setChangeContactModal={setChangeContactModal}\r\n          setChoosedContact={setChoosedContact}\r\n          choosedContact={choosedContact}\r\n        />\r\n      ) : (\r\n        <StyledTypography>No one contacts found</StyledTypography>\r\n      )}\r\n\r\n      <ModalWindow modalOpen={addContactModal} modalClose={handleFormClose}>\r\n        <AddContactsForm handleFormClose={handleFormClose} />\r\n      </ModalWindow>\r\n      <ModalWindow modalOpen={changeContactModal} modalClose={handleFormClose}>\r\n        <ChangeContactForm\r\n          handleFormClose={handleFormClose}\r\n          choosedContact={choosedContact}\r\n        />\r\n      </ModalWindow>\r\n      <ScrollTop>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"sourceRoot":""}