{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/ContactsForm/ContactsForm.module.css","component/Filter/Filter.module.css","component/ContactsList/ContactList.module.css","pages/PhonebookPage/PhonebookPage.module.css","redux/contacts/contacts-selectors.js","component/ContactsForm/ContactsForm.js","component/Filter/Filter.js","component/ContactsList/ContactsList.js","pages/PhonebookPage/PhonebookPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getContacts","state","contacts","items","getFilter","filter","getStatusLoading","loading","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","ContactsFrom","useSelector","contactsSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","e","currentTarget","onSubmit","preventDefault","newContact","find","contact","alert","contactsOperations","addContact","className","s","form","label","input","type","onChange","pattern","title","required","btn","Filter","changeFilters","target","ContactsList","filteredContacts","useEffect","fetchContacts","contactList","sort","a","b","map","onClick","deleteContact","id","PhonebookPage","statusLoading","ContactsForm"],"mappings":"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","file":"static/js/PhonebookPage.e792b2bd.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__vx8eK\",\"label\":\"ContactsForm_label__1ImMd\",\"input\":\"ContactsForm_input__221-r\",\"btn\":\"ContactsForm_btn__VYr_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__vSnYc\",\"input\":\"Filter_input__3Wmba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3H1Tc\",\"contact\":\"ContactList_contact__3Bgh1\",\"btn\":\"ContactList_btn__20BRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhonebookPage_title__36DS_\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getStatusLoading = (state) => state.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    // const sortByName = (a, b) => a.name - b.name;\r\n    // const sortedContacts = contacts.sort(sortByName);\r\n\r\n    return contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const filter = getFilter(state);\r\n//   const contacts = getContacts(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter((item) =>\r\n//     item.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactsForm.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { contactsOperations } from \"../../redux/contacts\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\n\r\nconst ContactsFrom = () => {\r\n  const contacts = useSelector(contactsSelector.getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = { name, number };\r\n    const sameContact = contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n    if (sameContact) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(newContact));\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsFrom;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport { contactsSelector } from \"../../redux/contacts/\";\r\nimport { changeFilters } from \"../../redux/contacts/contacts-slice\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(contactsSelector.getFilter);\r\n  // console.log(filter);\r\n  const dispatch = useDispatch();\r\n  // const hadleChange = (e) => {\r\n  //   console.log(e.target.value);\r\n  //   dispatch(changeFilters(e.target.value));\r\n  // };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(changeFilters(e.target.value))}\r\n        // onChange={hadleChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n// import { contactsOperations } from \"../../redux/contacts\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContacts = useSelector(contactsSelector.getFilteredContacts);\r\n  const sortByName = (a, b) =>\r\n    a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContacts.sort(sortByName).map((item) => {\r\n        return (\r\n          <li key={item.id} className={s.contact}>\r\n            <span>{item.name}:</span>\r\n            <span>{item.number}</span>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() =>\r\n                dispatch(contactsOperations.deleteContact(item.id))\r\n              }\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport ContactsForm from \"../../component/ContactsForm\";\r\nimport Filter from \"../../component/Filter\";\r\nimport ContactsList from \"../../component/ContactsList\";\r\nimport {\r\n  getContacts,\r\n  getStatusLoading,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./PhonebookPage.module.css\";\r\n\r\nconst PhonebookPage = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const statusLoading = useSelector(getStatusLoading);\r\n\r\n  return (\r\n    <>\r\n      <p className={s.title}>Add new contact</p>\r\n      <ContactsForm />\r\n      {contacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\r\n      {statusLoading && <p>Loading phonebook...</p>}\r\n      {contacts.length > 1 && <Filter />}\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"sourceRoot":""}