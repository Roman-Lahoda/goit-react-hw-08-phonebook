{"version":3,"sources":["component/Contacts/Contacts.module.css","redux/contacts/contacts-operations.js","component/UserMenu/UserMenu.module.css","redux/contacts/contacts-slice.js","redux/auth/auth-operation.js","redux/auth/auth-selector.js","component/Contacts/PrivateRoute.js","component/Contacts/PublicRoute.js","component/UserMenu/UserMenu.js","component/Contacts/Contacts.js","App.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","createAsyncThunk","_","a","rejectWithValue","axios","get","data","addContact","contact","post","deleteContact","id","delete","contactsSlice","createSlice","name","initialState","items","filter","isLoading","error","reducers","changeFilters","state","action","payload","extraReducers","pending","fulfilled","rejected","unshift","item","actions","defaults","baseURL","token","headers","common","Authorization","signUp","userData","console","log","logIn","logOut","refresh","getState","persistedToken","auth","status","statusText","authOperation","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","getIsfetchingCurrentUser","isFetchingCurrentUser","PrivateRoute","children","redirectTo","routeProps","useSelector","authSelector","to","PublicRoute","restricted","shouldRedirect","UserMenu","dispatch","useDispatch","className","s","text","onClick","btn","HomePage","lazy","PhonebookPage","RegisterPage","LoginPage","Contacts","useEffect","AppBar","navigation","list","exact","link","activeClassName","activeLink","fallback","path","App","content","authSlice","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","whitelist","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","contacts","contactsReducer","devtools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9a91fbc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"Contacts_AppBar__3KpEM\",\"navigation\":\"Contacts_navigation__mU0L8\",\"link\":\"Contacts_link__3D0y5\",\"activeLink\":\"Contacts_activeLink__1rSp_\",\"list\":\"Contacts_list__3B76I\"};","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4000\";\r\n// axios.defaults.baseURL = \"https://619a428d9022ea0017a7b0bb.mockapi.io\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (contact) => {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    await axios.delete(`/contacts/${id}`);\r\n    // console.log(id);\r\n    return id;\r\n  }\r\n);\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   try {\r\n//     const data = await axios.get(\"/contacts\");\r\n//     dispatch(fetchContactsSuccess(data.data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// const data = axios\r\n//   .get(\"/contacts\")\r\n//   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n//   .catch((error) => dispatch(fetchContactsError(error)));\r\n// };\r\n\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//   dispatch(addContactsRequest());\r\n\r\n//   try {\r\n//     const data = await axios.post(\"/contacts\", contact);\r\n//     dispatch(addContactsSuccess(data.data));\r\n//   } catch (error) {\r\n//     dispatch(addContactsError(error));\r\n//   }\r\n\r\n// axios\r\n//   .post(\"/contacts\", contact)\r\n//   .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n//   .catch((error) => dispatch(addContactsError(error)));\r\n// };\r\n\r\n// export const deleteContact = (contactId) => async (dispatch) => {\r\n//   dispatch(deleteContactsRequest());\r\n//   try {\r\n//     const data = await axios.delete(`/contacts/${contactId}`);\r\n//     dispatch(deleteContactsSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(deleteContactsError(error));\r\n//   }\r\n\r\n// axios\r\n//   .delete(`/contacts/${contactId}`)\r\n//   .then(() => dispatch(deleteContactsSuccess(contactId)))\r\n//   .catch((error) => dispatch(deleteContactsError(error)));\r\n// };\r\n\r\n// export default {\r\n//   fetchContacts,\r\n//   addContact,\r\n//   deleteContact,\r\n// };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"UserMenu_text__1ClS9\",\"btn\":\"UserMenu_btn__14UxZ\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from \"./contacts-operations\";\r\n// import { changeFilters } from \"./contacts-actions\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState,\r\n  reducers: {\r\n    changeFilters: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.items = action.payload;\r\n    },\r\n    [fetchContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    [addContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [addContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.items.unshift(action.payload);\r\n    },\r\n    [addContact.rejected](state, action) {\r\n      state.error = action.payload;\r\n    },\r\n    [deleteContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [deleteContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.items = state.items.filter((item) => item.id !== action.payload);\r\n    },\r\n    [deleteContact.rejected](state, action) {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeFilters } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const signUp = createAsyncThunk(\r\n  \"user/signup\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/signup\", userData);\r\n      console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  \"user/logIn\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/login\", userData);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  \"user/logOut\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post(\"/users/logout\");\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const refresh = createAsyncThunk(\r\n  \"user/refresh\",\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const state = getState();\r\n    // console.log(\"state :\", state);\r\n    const persistedToken = state.auth.token;\r\n    // console.log(persistedToken);\r\n    if (persistedToken === null) {\r\n      // console.log(\"Возвращаемся с refresh\");\r\n      // return;\r\n      return rejectWithValue({ status: null, statusText: \"Token not found\" });\r\n      // return rejectWithValue(5);\r\n      // return state;\r\n    }\r\n    // console.log(\"after if\");\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst authOperation = {\r\n  signUp,\r\n  logIn,\r\n  logOut,\r\n  refresh,\r\n};\r\nexport default authOperation;\r\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nconst getIsfetchingCurrentUser = (state) => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getIsfetchingCurrentUser,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport authSelector from \"../../redux/auth/auth-selector\";\r\n\r\nconst PrivateRoute = ({ children, redirectTo = \"/login\", ...routeProps }) => {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  //   console.log(routeProps);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport authSelector from \"../../redux/auth/auth-selector\";\r\n\r\nconst PublicRoute = ({\r\n  children,\r\n  redirectTo = \"/\",\r\n  restricted = false,\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(authSelector.getIsLoggedIn);\r\n  //   console.log(routeProps);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport authOperation from \"../../redux/auth/auth-operation\";\r\nimport authSelectors from \"../../redux/auth/auth-selector\";\r\nimport s from \"./UserMenu.module.css\";\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  const logout = () => {\r\n    dispatch(authOperation.logOut());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className={s.text}>Hello, {name}</p>\r\n      <button onClick={logout} className={s.btn}>\r\n        Log out\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport { lazy } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport authSelectors from \"../../redux/auth/auth-selector\";\r\nimport authOperation from \"../../redux/auth/auth-operation.js\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport s from \"./Contacts.module.css\";\r\n\r\nconst HomePage = lazy(() =>\r\n  import(\"../../pages/HomePage/HomePage.js\" /* webpackChunkName: \"HomePage\" */)\r\n);\r\nconst PhonebookPage = lazy(() =>\r\n  import(\r\n    \"../../pages/PhonebookPage/PhonebookPage.js\" /* webpackChunkName: \"PhonebookPage\" */\r\n  )\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import(\r\n    \"../../pages/RegisterPage/RegisterPage.js\" /* webpackChunkName: \"RegisterPage\" */\r\n  )\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import(\r\n    \"../../pages/LoginPage/LoginPage.js\" /* webpackChunkName: \"LoginPage\" */\r\n  )\r\n);\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const isFetchingCurrentUser = useSelector(\r\n    authSelectors.getIsfetchingCurrentUser\r\n  );\r\n  console.log(isFetchingCurrentUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperation.refresh());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <>\r\n        <div className={s.AppBar}>\r\n          <ul className={`${s.navigation} ${s.list}`}>\r\n            {isLoggedIn ? (\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/contacts\"\r\n                  className={s.link}\r\n                  activeClassName={s.activeLink}\r\n                >\r\n                  Phonebook\r\n                </NavLink>\r\n              </li>\r\n            ) : (\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/\"\r\n                  className={s.link}\r\n                  activeClassName={s.activeLink}\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          {!isLoggedIn ? (\r\n            <ul className={s.list}>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/register\"\r\n                  className={s.link}\r\n                  activeClassName={s.activeLink}\r\n                >\r\n                  Registration\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to=\"/login\"\r\n                  className={s.link}\r\n                  activeClassName={s.activeLink}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <UserMenu />\r\n          )}\r\n        </div>\r\n        <Suspense fallback={<h1>Loading...test</h1>}>\r\n          <Switch>\r\n            <PublicRoute exact redirectTo=\"/contacts\" restricted path=\"/\">\r\n              <HomePage />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute exact redirectTo=\"/login\" path=\"/contacts\">\r\n              <PhonebookPage />\r\n            </PrivateRoute>\r\n\r\n            <PublicRoute\r\n              exact\r\n              redirectTo=\"/contacts\"\r\n              restricted\r\n              path=\"/register\"\r\n            >\r\n              <RegisterPage />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute exact redirectTo=\"/contacts\" restricted path=\"/login\">\r\n              <LoginPage />\r\n            </PublicRoute>\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","// import s from \"./App.module.css\";\r\n// import ContactsForm from \"./component/ContactsForm\";\r\n// import Filter from \"./component/Filter\";\r\n// import ContactsList from \"./component/ContactsList\";\r\n// import RegistrationFrom from \"./component/RegistrationForm/RegistrationFrom\";\r\n// import LoginForm from \"./component/LoginForm/LoginForm\";\r\n\r\n// import Appbar from \"./component/Appbar/Appbar\";\r\nimport Contacts from \"./component/Contacts/Contacts\";\r\n\r\n// import { connect, useSelector, useDispatch } from \"react-redux\";\r\n// import {\r\n//   getStatusLoading,\r\n//   getContacts,\r\n// } from \"./redux/contacts/contacts-selectors\";\r\n// import authSelectors from \"./redux/auth/auth-selector\";\r\n// import { logOut, refresh } from \"./redux/auth/auth-operation\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  // const name = useSelector(authSelectors.getUserName);\r\n  // const dispatch = useDispatch();\r\n  // const logout = () => {\r\n  //   dispatch(logOut());\r\n  // };\r\n  // console.log(name);\r\n  // console.log(\"isLoggedIn\", isLoggedIn);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(refresh());\r\n  // }, [dispatch]);\r\n\r\n  // const contacts = useSelector(getContacts);\r\n  // const statusLoading = useSelector(getStatusLoading);\r\n  return (\r\n    <>\r\n      <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\r\n      <Contacts />\r\n      {/* {isLoggedIn ? (\r\n        <>\r\n          <h1>Hello, {name} </h1>\r\n          <button onClick={logout}>Log out</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <RegistrationFrom />\r\n          <LoginForm />\r\n        </>\r\n      )}\r\n      <div className={s.phonebook}>\r\n        <h1 className={s.pageTitle}>Phonebook</h1>\r\n        <ContactsForm />\r\n        {contacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\r\n        {statusLoading && <p className={s.loading}>Loading...</p>}\r\n        {contacts.length > 1 && <Filter />}\r\n        <ContactsList />\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { signUp, logIn, logOut, refresh } from \"./auth-operation\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [signUp.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [signUp.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [signUp.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    [logIn.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.isLoading = false;\r\n    },\r\n    [logIn.rejected](state, action) {\r\n      state.isLoading = false;\r\n    },\r\n    [logOut.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n      state.user.name = null;\r\n      state.user.email = null;\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n      state.isLoading = false;\r\n    },\r\n    [refresh.pending](state, action) {\r\n      //   console.log(\"state in slice pending\", state.isLoading);\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [refresh.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      //   console.log(\"state in slice fulfilled\", action);\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [refresh.rejected](state, action) {\r\n      state.isFetchingCurrentUser = false;\r\n      state.isLoggedIn = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import contactsReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport contactsReducer from \"./contacts/contacts-slice\";\r\nimport authReducer from \"./auth/auth-slice\";\r\n\r\n// const myMiddleware = (store) => (next) => (action) => {\r\n//   console.log(\"my middleware\");\r\n\r\n//   next(action);\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  // blacklist: [\"filter\"],\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(contactsPersistConfig, authReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistedReducer,\r\n    contacts: contactsReducer,\r\n  },\r\n  devtools: true,\r\n  middleware,\r\n  // devtools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}